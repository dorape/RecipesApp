{"version":3,"sources":["AppContext.js","layouts/Navigation.js","data/errorMessages.js","components/IngredientInput.js","components/Alert.js","components/FormComponent.js","pages/EditPage.js","components/RecipeItem.js","components/Recipes.js","pages/MainPage.js","pages/FormPage.js","layouts/Page.js","layouts/App.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","AppProvider","children","URL","useState","recipes","setRecipes","isLoading","setIsLoading","isEditingActive","setIsEditingActive","editID","setEditID","title","img","ingredients","notes","newRecipe","setNewRecipe","show","msg","type","alert","setAlert","errors","setErrors","fetchRecipes","a","fetch","response","json","recipesData","console","log","useEffect","showAlert","Provider","value","handleSubmit","e","preventDefault","validation","titleValid","imgValid","ingredientsArrayErrors","length","forEach","ingredient","index","ingredientErrors","name","quantity","unit","correct","validateForm","recipe","id","method","headers","body","JSON","stringify","then","resp","error","saveRecipe","Boolean","activateEditing","editedRecipe","deactivateEditing","handleAddNewIngredient","newIngredients","handleChange","includes","target","className","dataset","useGlobalContext","useContext","Navigation","to","onClick","errorMessages","IngredientInput","htmlFor","data-id","onChange","placeholder","min","Alert","removeAlert","timeout","setTimeout","clearTimeout","FormComponent","map","key","EditPage","render","RecipeItem","src","alt","Recipes","MainPage","FormPage","Page","path","exact","component","pat","App","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09c5bc9f.chunk.js","sourcesContent":["import React, {createContext, useContext, useEffect, useState} from 'react';\n\n\nconst AppContext = createContext();\n\nexport const AppProvider = ({children}) => {\n    const URL = 'https://my-json-server.typicode.com/monikaem/json_mock/recipes';\n    const [recipes, setRecipes] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isEditingActive, setIsEditingActive] = useState(false);\n    const [editID, setEditID] = useState(null);\n    const [newRecipe, setNewRecipe] = useState({title: '', img: '', ingredients: [], notes: ''});\n    const [alert, setAlert] = useState({show: false, msg: '', type: ''});\n    const [errors, setErrors] = useState({title: false, img: false, ingredients: false,})\n\n    const validateForm = () => {\n        const {title, img, ingredients} = newRecipe;\n        let titleValid = true; // true = OK (no error message)\n        let imgValid = true;\n        const ingredientsArrayErrors = [];\n            if (title.length < 3 || title.length > 30) {\n                titleValid = false;\n            }\n            if (!img) {\n                imgValid = false;\n            }\n            if (ingredients.length) {\n                ingredients.forEach((ingredient, index) => {\n                    const ingredientErrors = {};\n                    if (ingredient.name.length < 3 || ingredient.name.length > 30 ){\n                        ingredientErrors.name = true;\n                    }\n                    if (ingredient.quantity <= 0) {\n                        ingredientErrors.quantity = true;\n                    }\n                    if (!ingredient.unit) {\n                        ingredientErrors.unit = true;\n                    }\n                    if (ingredientErrors.name || ingredientErrors.quantity || ingredientErrors.unit) {\n                        ingredientsArrayErrors[index] = ingredientErrors;\n                    }\n                })\n            }\n            let correct = (titleValid && imgValid && !ingredientsArrayErrors.length);\n            return ({\n                correct,\n                titleValid,\n                imgValid,\n                ingredientsArrayErrors,\n            })\n        }\n\n    const fetchRecipes = async () => {\n        setIsLoading(true);\n        try {\n            const response = await fetch(URL);\n            const recipesData = await response.json();\n            setRecipes(recipesData);\n            setIsLoading(false);\n        } catch (error) {\n            setIsLoading(false);\n            console.log(error);\n        }\n    }\n\n    const saveRecipe = (recipe) => {\n        if (!isEditingActive) {\n            try {\n                return fetch(URL, {\n                    method: 'POST',\n                    headers: {'Content-Type': 'application/json'},\n                    body: JSON.stringify({recipe})\n                }).then(resp => resp.json());\n            } catch (error) {\n                console.log(error);\n            }\n        } else {\n            try {\n                return fetch(URL + '/' + recipe.id, {\n                    method: 'PUT',\n                    headers: {'Content-Type': 'application/json'},\n                    body: JSON.stringify({recipe})\n                }).then(resp => resp.json());\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n\n    useEffect(() => {\n        fetchRecipes();\n    }, [])\n\n    const showAlert = (show = false, type = '', msg = '') => {\n        setAlert({show, type, msg});\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const validation = validateForm();\n        if (validation.correct) {\n            saveRecipe(newRecipe);\n            setNewRecipe({title: '', img: '', ingredients: [], notes: ''})\n            showAlert(true, 'success', `item successfully ${isEditingActive ? 'updated' : 'added'}`);\n            setErrors({title: false, img: false, ingredients: false})\n            setIsEditingActive(false);\n        } else {\n            showAlert(true, 'danger', 'Check the form again');\n            setErrors({title: !validation.titleValid, img: !validation.imgValid, ingredients: Boolean(validation.ingredientsArrayErrors.length)})\n        }\n    }\n\n    const activateEditing = (id) => {\n        setIsEditingActive(true);\n        setEditID(id);\n        const editedRecipe = recipes[id]\n        setNewRecipe(editedRecipe);\n    }\n\n    const deactivateEditing = () => {\n        setIsEditingActive(false);\n        setEditID(null);\n        setNewRecipe({title: '', img: '', ingredients: [], notes: ''})\n        setErrors({title: false, img: false, ingredients: false})\n    }\n\n    const handleAddNewIngredient = (e) => {\n        e.preventDefault();\n        const newIngredient = {name: '', quantity: 1, unit: ''}\n        const ingredients = [...newRecipe.ingredients];\n        const newIngredients = [...ingredients, newIngredient]\n        setNewRecipe({...newRecipe, ingredients: newIngredients})\n    }\n\n    const handleChange = (e) => {\n        if ([\"name\", \"quantity\", \"unit\"].includes(e.target.className)) {\n            let ingredients = [...newRecipe.ingredients]\n            ingredients[e.target.dataset.id][e.target.className] = e.target.value\n            setNewRecipe({...newRecipe, ingredients})\n        } else {\n            const name = e.target.name;\n            const value = e.target.value;\n            setNewRecipe({...newRecipe, [name]: value})\n        }\n    }\n\n\n    return (\n        <AppContext.Provider value={{\n            isLoading,\n            recipes,\n            handleSubmit,\n            activateEditing,\n            isEditingActive,\n            deactivateEditing,\n            newRecipe,\n            handleAddNewIngredient,\n            handleChange,\n            editID,\n            alert,\n            showAlert,\n            errors\n        }}>\n            {children}\n        </AppContext.Provider>\n    )\n}\n\nexport const useGlobalContext = () => {\n    return useContext(AppContext);\n}\n\n","import {NavLink} from \"react-router-dom\";\nimport { BsFillPlusCircleFill} from \"react-icons/bs\";\nimport { FaListAlt } from \"react-icons/fa\"\n\nimport '../styles/Navigation.css'\nimport {useGlobalContext} from \"../AppContext\";\n\nconst Navigation = () => {\n    const {deactivateEditing} = useGlobalContext();\n    return (\n        <>\n            <div className='nav'>\n                <div className='navlink-container'>\n                <NavLink to='/'><button className='btn' onClick={deactivateEditing}>all recipes<i className='icon-btn'><FaListAlt/></i></button></NavLink>\n                <NavLink to='/add'><button className='btn' onClick={deactivateEditing}>add recipe<i className='icon-btn'><BsFillPlusCircleFill/></i></button></NavLink>\n                </div>\n                <div className='underline'></div>\n            </div>\n        </>\n    )\n}\n\nexport default Navigation;","export const errorMessages = {\n    title_incorrect: 'Empty dish name value!',\n    img_incorrect: 'Check the URl of the image!',\n    ingredients_incorrect: 'Please fill all the ingredients inputs!',\n\n}","import {useGlobalContext} from \"../AppContext\";\n\n\nconst IngredientInput = ({name, quantity, unit,id}) => {\n    const {handleChange} = useGlobalContext();\n    return (\n        <>\n            <h5>Ingredient #{id + 1}</h5>\n            <div className='form-control'>\n                <label htmlFor='name'>Name: </label>\n                <input\n                    type='text'\n                    name='name'\n                    data-id={id}\n                    className='name'\n                    value={name}\n                    onChange={handleChange}\n                    id='name'\n                    placeholder='3-30 letters'\n                />\n            </div>\n            <div className='form-control'>\n                <label htmlFor='quantity'>Quantity: </label>\n                <input\n                    type='number'\n                    name='quantity'\n                    data-id={id}\n                    className='quantity'\n                    value={quantity}\n                    onChange={handleChange}\n                    id='quantity'\n                    min='1'\n                />\n            </div>\n            <div className='form-control'>\n                <label htmlFor='unit'>Unit: </label>\n                <input\n                    type='text'\n                    name='unit'\n                    data-id={id}\n                    className='unit'\n                    value={unit}\n                    onChange={handleChange}\n                    id='unit'\n                    placeholder='kg, ml, tablespoon, teaspoon...'\n                />\n            </div>\n        </>\n    )\n}\n\n\nexport default IngredientInput;\n\n\n","import React, { useEffect } from 'react';\nimport '../styles/Alert.css'\n\nconst Alert = ({ type, msg, removeAlert, newRecipe }) => {\n    useEffect(() => {\n        const timeout = setTimeout(() => {\n            removeAlert();\n        }, 3000);\n        return () => clearTimeout(timeout);\n    }, [newRecipe]);\n    return <p className={`alert alert-${type}`}>{msg}</p>;\n};\n\nexport default Alert;","import {errorMessages} from \"../data/errorMessages\";\nimport IngredientInput from \"./IngredientInput\";\nimport {Link} from \"react-router-dom\";\nimport Alert from \"./Alert\";\nimport {useGlobalContext} from \"../AppContext\";\n\n\nconst FormComponent = () => {\n    const {handleSubmit, deactivateEditing, newRecipe, handleAddNewIngredient, handleChange, alert, showAlert, errors} = useGlobalContext();\n\n    return (\n        <>\n            <div className='form-container'>\n                <form>\n                    <h2>Add your own recipe!</h2>\n                    <div className='form-control'>\n                        <label htmlFor='title'>Dish Name: </label>\n                        <input\n                            type='text'\n                            name='title'\n                            value={newRecipe.title}\n                            onChange={handleChange}\n                            id='title'\n                            placeholder='3-30 letters'\n                        />\n                    </div>\n                    {errors.title && <p className='error-input'>{errorMessages.title_incorrect}</p>}\n                    <div className='form-control'>\n                        <label htmlFor='img'>Image URL: </label>\n                        <input\n                            type='text'\n                            name='img'\n                            value={newRecipe.img}\n                            onChange={handleChange}\n                            id='img'\n                            placeholder='Paste the image URL here'\n                        />\n                    </div>\n                    {errors.img && <p className='error-input'>{errorMessages.img_incorrect}</p>}\n                    <div className='form-control'>\n                        <label htmlFor='notes'>Your notes: </label>\n                        <input\n                            type='text'\n                            name='notes'\n                            value={newRecipe.notes}\n                            onChange={handleChange}\n                            id='notes'\n                            placeholder='Optional'\n                        />\n                    </div>\n                    <div className='form-ingredients-container'>\n                        {newRecipe.ingredients.map((ingredient, index) => {\n                            return (\n                                <IngredientInput {...ingredient} id={index} key={index}/>\n                            )\n                        })}\n                        {errors.ingredients && <p className='error-input'>{errorMessages.ingredients_incorrect}</p>}\n                        <button className='btn-ingredient' onClick={handleAddNewIngredient}>Add Ingredient</button>\n                    </div>\n\n                    <Link to='/'><button className='btn' onClick={deactivateEditing}>Cancel</button></Link>\n                    <button type='submit' className='btn' onClick={handleSubmit}>Save Recipe</button>\n                </form>\n                {alert.show && <Alert {...alert} removeAlert={showAlert} newRecipe={newRecipe} />}\n            </div>\n        </>\n    )\n}\n\nexport default FormComponent;","import {useGlobalContext} from \"../AppContext\";\nimport {Route, Redirect} from \"react-router\";\nimport FormComponent from \"../components/FormComponent\";\n\nconst EditPage = () => {\n    const {isEditingActive} = useGlobalContext();\n\n    return (\n        <>\n            <FormComponent/>\n            <Route render={() => isEditingActive ? null : <Redirect to=\"/add\"/>}/>\n        </>\n    )\n}\n\nexport default EditPage;","import {useGlobalContext} from \"../AppContext\";\nimport '../styles/RecipeItem.css'\nimport {RiEdit2Fill} from \"react-icons/ri\"\nimport {BiNote} from \"react-icons/bi\"\n\nimport {Link} from \"react-router-dom\";\n\nconst RecipeItem = ({img, title, ingredients, notes, id}) => {\n    const {activateEditing} = useGlobalContext();\n    return (\n        <article className='recipe-item'>\n            <img src={img} alt={title} className='photo'/>\n            <div className='recipe-info'>\n                <header>\n                    <h4>{title}</h4>\n                </header>\n                <p>Ingredients:</p>\n                <ul className='ingredients-list'>\n                    {ingredients.map((ingredient, index) => {\n                        return (\n                            <li key={index}>{ingredient.name} - {ingredient.quantity} {ingredient.unit}</li>\n                        )\n                    })}\n\n                </ul>\n                {notes && <p className='additional-info'><i><BiNote/></i>Notes: {notes}</p>}\n                <Link to=\"/edit\"><button className='btn' onClick={() => activateEditing(id)}>Edit <RiEdit2Fill/></button></Link>\n            </div>\n        </article>\n    )\n}\n\nexport default RecipeItem;","import {useGlobalContext} from \"../AppContext\";\nimport RecipeItem from \"./RecipeItem\";\n\nconst Recipes = () => {\n    const {recipes} = useGlobalContext();\n\n    return (\n        <div className='recipes-section-center'>\n            {recipes.map(recipe => {\n                return <RecipeItem {...recipe} key={recipe.id}/>\n            })}\n\n        </div>\n    )\n}\n\nexport default Recipes;\n\n\n","import '../styles/MainPage.css'\nimport Recipes from \"../components/Recipes\";\n\nconst MainPage = () => {\n    return (\n            <div className='items-container'>\n                <section className=\"recipes-section\">\n                    <div className=\"title\">\n                        <h2>our recipes</h2>\n                    </div>\n                    <div className='recipes-list'>\n                       <Recipes/>\n                    </div>\n                </section>\n            </div>\n    )\n}\n\nexport default MainPage;","import '../styles/FormPage.css'\nimport FormComponent from \"../components/FormComponent\";\n\nconst FormPage = () => {\n\n    return (\n        <FormComponent/>\n    )\n}\n\nexport default FormPage;","import EditPage from \"../pages/EditPage\";\nimport MainPage from \"../pages/MainPage\";\nimport FormPage from \"../pages/FormPage\";\nimport {Route, Switch} from \"react-router\";\n\nconst Page = () => {\n    return (\n        <>\n            <main>\n                <Switch>\n                    <Route path='/' exact={true} component={MainPage}/>\n                    <Route path='/add' exact={true} component={FormPage}/>\n                    <Route pat='/edit' exact={true} component={EditPage}/>\n                </Switch>\n            </main>\n        </>\n    )\n}\n\nexport default Page;","import '../styles/App.css';\nimport Navigation from \"./Navigation\";\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport Page from \"./Page\";\nimport {useGlobalContext} from \"../AppContext\";\n\nfunction App() {\n    const {isLoading} = useGlobalContext();\n\n    if (isLoading) {\n        return (\n            <h1 className='loading'>Loading...</h1>\n        )\n    }\n  return (\n      <Router basename={process.env.PUBLIC_URL}>\n          <div className='App'>\n              <Navigation/>\n              <Page/>\n          </div>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './layouts/App';\nimport reportWebVitals from './reportWebVitals';\nimport {AppProvider} from './AppContext'\n\nReactDOM.render(\n  <React.StrictMode>\n      <AppProvider>\n    <App />\n      </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}